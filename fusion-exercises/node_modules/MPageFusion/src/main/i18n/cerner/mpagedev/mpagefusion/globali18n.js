import { default as au } from "./en_au";
import { default as ca } from "./en_ca";
import { isDefined } from "../../../../js/cerner/mpagedev/mpagefusion/helpers/core/typeChecks";

let localeVal = "EN_US";

/**
 * locale_id will be available in "window.m_criterionJSON.CRITERION.LOCALE_ID"
 * FUSION_LOCALE will always fallback to en_US for multiple regions,
 * hence we are using "window.m_criterionJSON.CRITERION.LOCALE_ID" to get the valid locale id for all the regions
 */

const CRITERION = isDefined(window.m_criterionJSON) && JSON.parse(window.m_criterionJSON).CRITERION;

if ( CRITERION && CRITERION.LOCALE_ID ) {
    localeVal = CRITERION.LOCALE_ID.toUpperCase();
}

/**
 * Function returns the global fusion locale after modifying the date format for Australia / Canada regions
 * @returns {Object} returns the global fusion locale
 */
const exportLocale = () => {
    /**
    * The date formats in calendar controls are populated form global i18n (i18n.discernabu.fusion) definitions.
    * There is no translations files created for Australia and Canada region.
    * When MPages is loaded in australia or canada, It will fallback to US translation.
    * To support date format for canada and australia, we are explicitly overriding the date and time picker.
    */
    switch(localeVal) {
        case "EN_AU":
            Object.assign(
                i18n.discernabu.fusion,
                { datePicker: au.datePicker },
                { timePicker: au.timePicker }
            );
            break;
        case "EN_CA":
            Object.assign(
                i18n.discernabu.fusion,
                { datePicker: ca.datePicker },
                { timePicker: ca.timePicker }
            );
            break;
    }
    return i18n.discernabu.fusion;
};

export default exportLocale;
