import UIComponent from "../../../base";
import classNames from "classnames";
import Button from "../../atomic/button";
import Menu from "../menu";
import i18n from "i18n";
import ChevronDown from "../../atomic/icon/svg/category/navigation/ExpandMore";
import { forwardProps } from "../../../helpers/props/props";

/**
 * A regular button with a menu attached to its right, which is supposed to
 * display extra actions related to the action of the main button.
 */
export default class SplitButton extends UIComponent {

    /**
     * @inheritdoc
     */
    initialProps() {
        return {
            classNames: "",
            disabled: false,
            display: "",
            displayPosition: "after",
            isSelected: false,
            icon: null,
            label: "",
            type: "",
            isOpen: false,
            showHeader: false,
            title: i18n().options,
            content: [],
            clickEventName: SplitButton.EVENTS.CLICK,
            selectionChangeEventName: SplitButton.EVENTS.SELECTION_CHANGE,
            toggleEventName: SplitButton.EVENTS.TOGGLE,
            basicActionEventName: SplitButton.EVENTS.BASIC_ACTION,
            menuLabel: ""
        };
    }

    /**
     * @inheritdoc
     */
    createChildren() {
        return [
            {
                button: new Button({
                    classNames: "mpageui-SplitButton-button"
                })
            },
            {
                menu: new Menu({
                    classNames: "mpageui-SplitButton-menu",
                    anchorControl: new Button({
                        classNames: "mpageui-SplitButton-anchor",
                        icon: new ChevronDown()
                    })
                })
            }
        ];
    }

    /**
     * @inheritdoc
     */
    propChangeHandlers() {
        return Object.assign(
            forwardProps(this, "button", [
                "clickEventName",
                "display",
                "displayPosition",
                "icon",
                "title",
                "isSelected",
                "label"
            ]),
            forwardProps(this, "menu", [
                "isOpen",
                "showHeader",
                "content",
                "selectionChangeEventName",
                "toggleEventName",
                "basicActionEventName",
                "menuLabel"
            ]),
            {
                type: (type) => {
                    this.getChild("button").setProp("type", type);
                    this.getChild("menu").getProp("anchorControl").setProp("type", type);
                }
            },
            {
                disabled: (disabled) => {
                    this.getChild("button").setProp("disabled", disabled);
                    this.getChild("menu").setProp("isDisabled", disabled);
                    this.getChild("menu").getProp("anchorControl").setProp("disabled", disabled);
                }
            },
            {
                menuLabel: (label) => {
                    this.getChild("menu").getProp("anchorControl").setProp("title", label);
                    this.getChild("menu").getProp("anchorControl").setProp("label", label);
                }
            }
        );
    }

    /**
     * @inheritdoc
     */
    view(el, props, children, mChildren) {
        return el("div", {
            class: classNames({
                [ props.classNames ]: props.classNames.length > 0,
                "mpageui-SplitButton": true,
                [ `mpageui-SplitButton--${props.type}` ]: props.type.length > 0
            })
        }, this.renderChildren());
    }
}

SplitButton.EVENTS = {
    CLICK: "SplitButton::Click",
    SELECTION_CHANGE: "SplitButton::SelectionChange",
    BASIC_ACTION: "SplitButton::BasicAction"
};
